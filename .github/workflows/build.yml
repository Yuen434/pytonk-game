name: Build PyTonk APK

on: 
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # 增加超时时间
    
    steps:
    - uses: actions/checkout@v4  # 更新到最新版本
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk \
          autoconf libtool pkg-config zlib1g-dev \
          libncurses5-dev libncursesw5-dev libtinfo5 cmake \
          libssl-dev libffi-dev libxml2-dev libxslt-dev \
          libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython virtualenv kivy
        
    - name: Create buildozer.spec
      run: |
        cat > buildozer.spec <<EOF
        [app]
        title = PyTonk Game
        package.name = pytonkgame
        package.domain = org.pytonk
        source.dir = .
        source.include_exts = py,png,jpg,ttf,otf
        source.main = main.py
        version = 0.1
        requirements = python3,pygame==2.1.3,kivy
        orientation = landscape
        fullscreen = 1
        android.permissions = VIBRATE
        android.api = 33
        android.minapi = 24
        android.sdk = 33
        android.ndk = 25b
        android.accept_sdk_license = True
        p4a.branch = master
        EOF
        
    - name: Build APK
      run: |
        # 设置环境变量
        export BUILD_PATH=$(pwd)
        export PATH="${PATH}:${HOME}/.local/bin"
        
        # 初始化Buildozer
        buildozer init -f
        
        # 执行构建
        buildozer -v android debug
        
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: PyTonk-APK
        path: bin/*.apk
